services:
  pg:
    image: postgres:latest
    environment:
      POSTGRES_DB       : ${DB_NAME}
      POSTGRES_PASSWORD : ${DB_PASS}
      POSTGRES_USER     : ${DB_USER}
    networks:
      - api_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} -h localhost"]
      interval: 120s
      timeout: 10s
      retries: 2
      start_period: 10s

  db:
    image: 9ziggy9.db
    build:
      context: .
      dockerfile: ${DIR_DB}/Dockerfile
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      PORT_DB: ${PORT_DB}
    networks:
      - api_net
    depends_on:
      pg:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT_DB}/ping"]
      interval: 120s
      timeout: 10s
      retries: 2
      start_period: 10s

  ws:
    image: 9ziggy9.ws
    build:
      context: .
      dockerfile: ${DIR_WS}/Dockerfile
    networks:
      - api_net
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT_WS}/ping"]
      interval: 120s
      timeout: 10s
      retries: 2
      start_period: 10s

  web:
    image: 9ziggy9.web
    build:
      context: .
      dockerfile: ${DIR_WEB}/Dockerfile
    environment:
      PORT_WEB: ${PORT_WEB}
    networks:
      - api_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT_WEB}/ping"]
      interval: 120s
      timeout: 10s
      retries: 2
      start_period: 10s

  proxy:
    image: nginx:latest
    ports:
      - "${PORT_PROXY}:${PORT_PROXY}"
    volumes:
      - ./${DIR_PROXY}/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      db:
        condition: service_healthy
      ws:
        condition: service_healthy
      web:
        condition: service_healthy
    networks:
      - api_net

networks:
  api_net:
    driver: bridge